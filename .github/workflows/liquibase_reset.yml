###
### This sample pipeline is intended as a starting point for integration between Liquibase Pro and GitHub pipelines
### Review and update prior to use
###
### Liquibase sales: https://www.liquibase.com/contact
### Liquibase support: https://support.liquibase.com/knowledge
### 

###
### Prior to running the following files must exist in repository:
###
### 1. liquibase.flowfile.yaml
###    Liquibase flow file
###    https://docs.liquibase.com/commands/flow/flow.html
###
###
### 2. changelog.main.xml
###    Liquibase changelog file
###    https://docs.liquibase.com/concepts/changelogs/home.html
###

###
### GitHub Actions documentation: https://docs.github.com/en/actions
###

name: 2. Liquibase Reset

on:
  workflow_dispatch:

env:
    NEO4J_AURA_CLIENT_ID: ${{ secrets.NEO4J_AURA_CLIENT_ID }}
    NEO4J_AURA_CLIENT_SECRET: ${{ secrets.NEO4J_AURA_CLIENT_SECRET }}
    NEO4J_AURA_INSTANCE_ID: ${{ vars.NEO4J_AURA_INSTANCE_ID }}
    NEO4J_AURA_SNAPSHOT_ID: ${{ vars.NEO4J_AURA_SNAPSHOT_ID }}

jobs:
  liquibase-reset:
    runs-on: ubuntu-latest
    steps:
    - name: Install jq
      run: sudo apt-get install -y jq
    - name: Restoring Neo4j backup
      run: |
        ACCESS_TOKEN=$(curl --request POST 'https://api.neo4j.io/oauth/token' --user "${NEO4J_AURA_CLIENT_ID}:${NEO4J_AURA_CLIENT_SECRET}" --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'grant_type=client_credentials' | jq -r .access_token)
        curl --request POST --header "Authorization: Bearer ${ACCESS_TOKEN}" --header 'Content-Type: application/json' "https://api.neo4j.io/v1/instances/${NEO4J_AURA_INSTANCE_ID}/snapshots/${NEO4J_AURA_SNAPSHOT_ID}/restore"
